import Gaffer
import GafferArnold
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Seeds"] = GafferScene.Seeds( "Seeds" )
parent.addChild( __children["Seeds"] )
__children["Seeds"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Instancer"] = GafferScene.Instancer( "Instancer" )
parent.addChild( __children["Instancer"] )
__children["Instancer"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["SubTree"] = GafferScene.SubTree( "SubTree" )
parent.addChild( __children["SubTree"] )
__children["SubTree"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FreezeTransform"] = GafferScene.FreezeTransform( "FreezeTransform" )
parent.addChild( __children["FreezeTransform"] )
__children["FreezeTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Camera"] = GafferScene.Camera( "Camera" )
parent.addChild( __children["Camera"] )
__children["Camera"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"] = GafferScene.Group( "Group1" )
parent.addChild( __children["Group1"] )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"]["in"].addChild( GafferScene.ScenePlug( "in6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Group1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["StandardOptions"] = GafferScene.StandardOptions( "StandardOptions" )
parent.addChild( __children["StandardOptions"] )
__children["StandardOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ArnoldOptions"] = GafferArnold.ArnoldOptions( "ArnoldOptions" )
parent.addChild( __children["ArnoldOptions"] )
__children["ArnoldOptions"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["InteractiveArnoldRender"] = GafferArnold.InteractiveArnoldRender( "InteractiveArnoldRender" )
parent.addChild( __children["InteractiveArnoldRender"] )
__children["InteractiveArnoldRender"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"] = GafferImage.Catalogue( "Catalogue" )
parent.addChild( __children["Catalogue"] )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"]["images"].addChild( GafferImage.Catalogue.Image( "Image6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Catalogue"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"] = GafferScene.Outputs( "Outputs" )
parent.addChild( __children["Outputs"] )
__children["Outputs"]["outputs"].addChild( Gaffer.ValuePlug( "output1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.BoolPlug( "active", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "fileName", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "type", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.StringPlug( "data", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"].addChild( Gaffer.CompoundDataPlug( "parameters", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "driverType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'driverType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["driverType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'ClientDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "quantize", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.StringPlug( "name", defaultValue = 'quantize', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["quantize"].addChild( Gaffer.IntVectorDataPlug( "value", defaultValue = IECore.IntVectorData( [ 0, 0, 0, 0 ] ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayPort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayPort', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayPort"].addChild( Gaffer.StringPlug( "value", defaultValue = '${image:catalogue:port}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "displayHost", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "name", defaultValue = 'displayHost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["displayHost"].addChild( Gaffer.StringPlug( "value", defaultValue = 'localhost', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "remoteDisplayType", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "name", defaultValue = 'remoteDisplayType', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"]["outputs"]["output1"]["parameters"]["remoteDisplayType"].addChild( Gaffer.StringPlug( "value", defaultValue = 'GafferImage::GafferDisplayDriver', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Outputs"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ShaderAssignment"] = GafferScene.ShaderAssignment( "ShaderAssignment" )
parent.addChild( __children["ShaderAssignment"] )
__children["ShaderAssignment"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["standard_surface"] = GafferArnold.ArnoldShader( "standard_surface" )
parent.addChild( __children["standard_surface"] )
__children["standard_surface"].loadShader( "standard_surface" )
__children["standard_surface"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["distant_light"] = GafferArnold.ArnoldLight( "distant_light" )
parent.addChild( __children["distant_light"] )
__children["distant_light"].loadShader( "distant_light" )
__children["distant_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["utility"] = GafferArnold.ArnoldShader( "utility" )
parent.addChild( __children["utility"] )
__children["utility"].loadShader( "utility" )
__children["utility"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Encapsulate"] = GafferScene.Encapsulate( "Encapsulate" )
parent.addChild( __children["Encapsulate"] )
__children["Encapsulate"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter1"] = GafferScene.PathFilter( "PathFilter1" )
parent.addChild( __children["PathFilter1"] )
__children["PathFilter1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Reference"] = Gaffer.Reference( "Reference" )
parent.addChild( __children["Reference"] )
__children["Reference"].load( "/home/don/gaffer/projects/default/references/animal.grf" )
__children["Reference"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 38015 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Plane"]["transform"]["rotate"].setValue( imath.V3f( 90, 0, 0 ) )
__children["Plane"]["transform"]["scale"].setValue( imath.V3f( 10, 10, 10 ) )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( 36.5522575, 5.12591743 ) )
__children["Seeds"]["in"].setInput( __children["Plane"]["out"] )
__children["Seeds"]["parent"].setValue( '/plane' )
__children["Seeds"]["density"].setValue( 1000.0 )
__children["Seeds"]["__uiPosition"].setValue( imath.V2f( 40.2836952, -5.1970129 ) )
__children["Instancer"]["in"].setInput( __children["FreezeTransform"]["out"] )
__children["Instancer"]["parent"].setValue( '/plane/seeds' )
__children["Instancer"]["instances"].setInput( __children["Reference"]["out"] )
__children["Instancer"]["__uiPosition"].setValue( imath.V2f( 54.2273254, -26.1233082 ) )
__children["SubTree"]["in"].setInput( __children["Instancer"]["out"] )
__children["SubTree"]["root"].setValue( '/plane/seeds/instances/seeds' )
__children["SubTree"]["includeRoot"].setValue( True )
__children["SubTree"]["__uiPosition"].setValue( imath.V2f( 56.2846718, -34.2873726 ) )
__children["FreezeTransform"]["in"].setInput( __children["Seeds"]["out"] )
__children["FreezeTransform"]["__uiPosition"].setValue( imath.V2f( 40.2836952, -17.9592457 ) )
__children["Camera"]["transform"]["translate"].setValue( imath.V3f( 0, 3.28935242, 9.62182999 ) )
__children["Camera"]["transform"]["rotate"].setValue( imath.V3f( -17.6578636, 0, 0 ) )
__children["Camera"]["__uiPosition"].setValue( imath.V2f( 16.9394608, -72.4385376 ) )
__children["Group1"]["in"]["in1"].setInput( __children["Camera"]["out"] )
__children["Group1"]["in"]["in2"].setInput( __children["distant_light"]["out"] )
__children["Group1"]["in"]["in5"].setInput( __children["ShaderAssignment"]["out"] )
__children["Group1"]["__uiPosition"].setValue( imath.V2f( 58.4298096, -87.3753052 ) )
__children["StandardOptions"]["in"].setInput( __children["Encapsulate"]["out"] )
__children["StandardOptions"]["options"]["renderCamera"]["value"].setValue( '/group/camera' )
__children["StandardOptions"]["options"]["renderCamera"]["enabled"].setValue( True )
__children["StandardOptions"]["options"]["renderResolution"]["value"].setValue( imath.V2i( 2048, 1152 ) )
__children["StandardOptions"]["options"]["renderResolution"]["enabled"].setValue( True )
__children["StandardOptions"]["__uiPosition"].setValue( imath.V2f( 111.063766, -90.7108536 ) )
__children["ArnoldOptions"]["in"].setInput( __children["StandardOptions"]["out"] )
__children["ArnoldOptions"]["options"]["aaSamples"]["value"].setValue( 6 )
__children["ArnoldOptions"]["options"]["aaSamples"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giDiffuseSamples"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giSpecularSamples"]["value"].setValue( 1 )
__children["ArnoldOptions"]["options"]["giVolumeSamples"]["value"].setValue( 1 )
__children["ArnoldOptions"]["options"]["giDiffuseDepth"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["giVolumeDepth"]["value"].setValue( 5 )
__children["ArnoldOptions"]["options"]["consoleInfo"]["value"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleInfo"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleWarnings"]["enabled"].setValue( True )
__children["ArnoldOptions"]["options"]["consoleErrors"]["enabled"].setValue( True )
__children["ArnoldOptions"]["__uiPosition"].setValue( imath.V2f( 113.508575, -100.226738 ) )
__children["InteractiveArnoldRender"]["in"].setInput( __children["Outputs"]["out"] )
__children["InteractiveArnoldRender"]["__uiPosition"].setValue( imath.V2f( 114.600021, -128.188934 ) )
__children["Catalogue"]["images"]["Image"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/3de655de21b7ab43bc48db22c106b4d5.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image1"], 'image:index', 1 )
__children["Catalogue"]["images"]["Image1"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/aecfc5cd1c1d729e48e2e62e1ff62a5f.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image2"], 'image:index', 2 )
__children["Catalogue"]["images"]["Image2"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/2d9596255189a0fff5a65dbf9929e318.exr' )
Gaffer.Metadata.registerValue( __children["Catalogue"]["images"]["Image3"], 'image:index', 3 )
__children["Catalogue"]["images"]["Image3"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/5d74990934fd75b554327e89b0f582ac.exr' )
__children["Catalogue"]["images"]["Image4"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/4c9fe1a348ef0cf4b3c5a8e9614a9d26.exr' )
__children["Catalogue"]["images"]["Image5"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/c7d066222b8e0c2fd8ce63e32ab5629e.exr' )
__children["Catalogue"]["images"]["Image6"]["fileName"].setValue( '/home/don/gaffer/projects/default/catalogues/instancer-example/6140544ecf0f0ac9a05d5f1042211933.exr' )
__children["Catalogue"]["imageIndex"].setValue( 7 )
__children["Catalogue"]["directory"].setValue( '${project:rootDirectory}/catalogues/${script:name}' )
__children["Catalogue"]["__mapping"].setValue( IECore.CompoundData({'Image':IECore.IntData( 0 ),'Image1':IECore.IntData( 1 ),'Image2':IECore.IntData( 2 ),'Image3':IECore.IntData( 3 ),'Image4':IECore.IntData( 4 ),'Image5':IECore.IntData( 5 ),'Image6':IECore.IntData( 6 ),'Image7':IECore.IntData( 7 )}) )
__children["Catalogue"]["__uiPosition"].setValue( imath.V2f( 135.082565, -122.394203 ) )
__children["Outputs"]["in"].setInput( __children["ArnoldOptions"]["out"] )
__children["Outputs"]["outputs"]["output1"]["name"].setValue( 'Interactive/Beauty' )
__children["Outputs"]["outputs"]["output1"]["fileName"].setValue( 'beauty' )
__children["Outputs"]["outputs"]["output1"]["type"].setValue( 'ieDisplay' )
__children["Outputs"]["outputs"]["output1"]["data"].setValue( 'rgba' )
__children["Outputs"]["__uiPosition"].setValue( imath.V2f( 104.116241, -108.3908 ) )
__children["ShaderAssignment"]["in"].setInput( __children["SubTree"]["out"] )
__children["ShaderAssignment"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["ShaderAssignment"]["shader"].setInput( __children["utility"]["out"] )
__children["ShaderAssignment"]["__uiPosition"].setValue( imath.V2f( 64.4298096, -56.2782059 ) )
__children["PathFilter"]["paths"].setValue( IECore.StringVectorData( [ '/seeds' ] ) )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( 72.4312592, -42.5324936 ) )
__children["standard_surface"]["__uiPosition"].setValue( imath.V2f( 29.4609108, -46.8123245 ) )
__children["distant_light"]["transform"]["translate"].setValue( imath.V3f( 0, 3.25642943, 0 ) )
__children["distant_light"]["transform"]["rotate"].setValue( imath.V3f( -68.3008347, 0, 0 ) )
__children["distant_light"]["parameters"]["intensity"].setValue( 5.0 )
__children["distant_light"]["__uiPosition"].setValue( imath.V2f( 40.2782516, -71.15065 ) )
__children["utility"]["parameters"]["shade_mode"].setValue( 'lambert' )
__children["utility"]["parameters"]["color"].setValue( imath.Color3f( 0.277800053, 1, 0.215000033 ) )
__children["utility"]["__uiPosition"].setValue( imath.V2f( 28.1659565, -60.0986481 ) )
__children["Encapsulate"]["in"].setInput( __children["Group1"]["out"] )
__children["Encapsulate"]["filter"].setInput( __children["PathFilter1"]["out"] )
__children["Encapsulate"]["__uiPosition"].setValue( imath.V2f( 82.9952698, -88.4250717 ) )
__children["PathFilter1"]["paths"].setValue( IECore.StringVectorData( [ '/group/seeds' ] ) )
__children["PathFilter1"]["__uiPosition"].setValue( imath.V2f( 95.9952698, -82.3421936 ) )
__children["Reference"]["out"].setInput( __children["Reference"]["BoxOut"]["__out"] )
__children["Reference"]["parameters_a"].setValue( 0.0 )
__children["Reference"]["__uiPosition"].setValue( imath.V2f( 79.6766281, 3.86361694 ) )


del __children

