import Gaffer
import GafferImage
import GafferOSL
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 53, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["OSLImage"] = GafferOSL.OSLImage( "OSLImage" )
parent.addChild( __children["OSLImage"] )
__children["OSLImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["Box"] = Gaffer.Box( "Box" )
parent.addChild( __children["Box"] )
__children["Box"].addChild( GafferOSL.OSLShader( "OutChannel" ) )
__children["Box"]["OutChannel"].loadShader( "ImageProcessing/OutChannel" )
__children["Box"]["OutChannel"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "OutImage" ) )
__children["Box"]["OutImage"].loadShader( "ImageProcessing/OutImage" )
__children["Box"]["OutImage"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.Plug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "OutChannel1" ) )
__children["Box"]["OutChannel1"].loadShader( "ImageProcessing/OutChannel" )
__children["Box"]["OutChannel1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "OutChannel2" ) )
__children["Box"]["OutChannel2"].loadShader( "ImageProcessing/OutChannel" )
__children["Box"]["OutChannel2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLCode( "OSLCode1" ) )
__children["Box"]["OSLCode1"]["parameters"].addChild( Gaffer.Color3fPlug( "inC", defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["OSLCode1"]["parameters"].addChild( Gaffer.FloatPlug( "a", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["OSLCode1"]["out"].addChild( Gaffer.Color3fPlug( "output1", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Color3f( 0, 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["OSLCode1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "ColorToFloat" ) )
__children["Box"]["ColorToFloat"].loadShader( "Conversion/ColorToFloat" )
__children["Box"]["ColorToFloat"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "InChannel" ) )
__children["Box"]["InChannel"].loadShader( "ImageProcessing/InChannel" )
__children["Box"]["InChannel"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "InChannel1" ) )
__children["Box"]["InChannel1"].loadShader( "ImageProcessing/InChannel" )
__children["Box"]["InChannel1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "InChannel2" ) )
__children["Box"]["InChannel2"].loadShader( "ImageProcessing/InChannel" )
__children["Box"]["InChannel2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( GafferOSL.OSLShader( "FloatToColor" ) )
__children["Box"]["FloatToColor"].loadShader( "Conversion/FloatToColor" )
__children["Box"]["FloatToColor"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Box"]["BoxOut"].addChild( Gaffer.Plug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["BoxOut"].addChild( Gaffer.Plug( "__out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Box"]["BoxIn"].addChild( Gaffer.FloatPlug( "__in", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["BoxIn"].addChild( Gaffer.FloatPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Box"].addChild( Gaffer.FloatPlug( "parameters_a", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].addChild( GafferImage.ImagePlug( "__in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"].addChild( GafferImage.ImagePlug( "__out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["BoxIn1"] = Gaffer.BoxIn( "BoxIn1" )
parent.addChild( __children["BoxIn1"] )
__children["BoxIn1"].addChild( Gaffer.FloatPlug( "__in", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"].addChild( Gaffer.FloatPlug( "out", direction = Gaffer.Plug.Direction.Out, defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["parameters_a"] = Gaffer.FloatPlug( "parameters_a", defaultValue = 0.17000000178813934, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["parameters_a"] )
__children["OSLImage"]["in"].setInput( __children["BoxIn"]["out"] )
__children["OSLImage"]["shader"].setInput( __children["Box"]["out"] )
__children["OSLImage"]["__uiPosition"].setValue( imath.V2f( 40.4083824, 8.93212318 ) )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
__children["Box"]["OutChannel"]["parameters"]["channelValue"].setInput( __children["Box"]["ColorToFloat"]["out"]["r"] )
__children["Box"]["OutChannel"]["__uiPosition"].setValue( imath.V2f( -10.1004944, 16.9710197 ) )
__children["Box"]["OutImage"]["parameters"]["in0"].setInput( __children["Box"]["OutChannel"]["out"]["channel"] )
__children["Box"]["OutImage"]["parameters"]["in1"].setInput( __children["Box"]["OutChannel1"]["out"]["channel"] )
__children["Box"]["OutImage"]["parameters"]["in2"].setInput( __children["Box"]["OutChannel2"]["out"]["channel"] )
__children["Box"]["OutImage"]["__uiPosition"].setValue( imath.V2f( 5.86834002, 4.71197319 ) )
__children["Box"]["out"].setInput( __children["Box"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'description', 'The output from the shader.' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'noduleLayout:customGadget:addButton:gadgetType', 'GafferSceneUI.ShaderUI.PlugAdder' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'nodule:color', None )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["out"], 'noduleLayout:spacing', 0.20000000298023224 )
__children["Box"]["OutChannel1"]["parameters"]["channelName"].setValue( 'G' )
__children["Box"]["OutChannel1"]["parameters"]["channelValue"].setInput( __children["Box"]["ColorToFloat"]["out"]["g"] )
__children["Box"]["OutChannel1"]["__uiPosition"].setValue( imath.V2f( -9.32965565, 10.7243967 ) )
__children["Box"]["OutChannel2"]["parameters"]["channelName"].setValue( 'B' )
__children["Box"]["OutChannel2"]["parameters"]["channelValue"].setInput( __children["Box"]["ColorToFloat"]["out"]["b"] )
__children["Box"]["OutChannel2"]["__uiPosition"].setValue( imath.V2f( -7.4263382, 4.71197319 ) )
__children["Box"]["OSLCode1"]["parameters"]["inC"].setInput( __children["Box"]["FloatToColor"]["out"]["c"] )
__children["Box"]["OSLCode1"]["parameters"]["inC"]["r"].setInput( __children["Box"]["FloatToColor"]["out"]["c"]["r"] )
__children["Box"]["OSLCode1"]["parameters"]["inC"]["g"].setInput( __children["Box"]["FloatToColor"]["out"]["c"]["g"] )
__children["Box"]["OSLCode1"]["parameters"]["inC"]["b"].setInput( __children["Box"]["FloatToColor"]["out"]["c"]["b"] )
__children["Box"]["OSLCode1"]["parameters"]["a"].setInput( __children["Box"]["BoxIn"]["out"] )
__children["Box"]["OSLCode1"]["code"].setValue( 'if (inC[0] >= 0.25)\n\toutput1 = noise(P * a);\nelse\n\toutput1 = inC;\n\n\n' )
__children["Box"]["OSLCode1"]["__uiPosition"].setValue( imath.V2f( -43.293148, 15.4187031 ) )
__children["Box"]["ColorToFloat"]["parameters"]["c"].setInput( __children["Box"]["OSLCode1"]["out"]["output1"] )
__children["Box"]["ColorToFloat"]["parameters"]["c"]["r"].setInput( __children["Box"]["OSLCode1"]["out"]["output1"]["r"] )
__children["Box"]["ColorToFloat"]["parameters"]["c"]["g"].setInput( __children["Box"]["OSLCode1"]["out"]["output1"]["g"] )
__children["Box"]["ColorToFloat"]["parameters"]["c"]["b"].setInput( __children["Box"]["OSLCode1"]["out"]["output1"]["b"] )
__children["Box"]["ColorToFloat"]["__uiPosition"].setValue( imath.V2f( -26.2017059, 16.9710197 ) )
__children["Box"]["InChannel"]["__uiPosition"].setValue( imath.V2f( -84.3752365, 23.4698257 ) )
__children["Box"]["InChannel1"]["parameters"]["channelName"].setValue( 'G' )
__children["Box"]["InChannel1"]["__uiPosition"].setValue( imath.V2f( -86.5484695, 15.2228727 ) )
__children["Box"]["InChannel2"]["parameters"]["channelName"].setValue( 'B' )
__children["Box"]["InChannel2"]["__uiPosition"].setValue( imath.V2f( -86.7037048, 6.06419945 ) )
__children["Box"]["FloatToColor"]["parameters"]["r"].setInput( __children["Box"]["InChannel"]["out"]["channelValue"] )
__children["Box"]["FloatToColor"]["parameters"]["g"].setInput( __children["Box"]["InChannel1"]["out"]["channelValue"] )
__children["Box"]["FloatToColor"]["parameters"]["b"].setInput( __children["Box"]["InChannel2"]["out"]["channelValue"] )
__children["Box"]["FloatToColor"]["__uiPosition"].setValue( imath.V2f( -62.021862, 23.4698277 ) )
__children["Box"]["BoxOut"]["in"].setInput( __children["Box"]["OutImage"]["out"] )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["in"], 'noduleLayout:section', 'left' )
__children["Box"]["BoxOut"]["__out"].setInput( __children["Box"]["BoxOut"]["in"] )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'description', 'The output from the shader.' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'noduleLayout:section', 'right' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'noduleLayout:customGadget:addButton:gadgetType', 'GafferSceneUI.ShaderUI.PlugAdder' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'nodule:color', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxOut"]["__out"], 'noduleLayout:spacing', 0.20000000298023224 )
__children["Box"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( 17.4033642, 4.71267986 ) )
__children["Box"]["__uiPosition"].setValue( imath.V2f( 13.7653246, 12.6777639 ) )
__children["Box"]["BoxIn"]["name"].setValue( 'parameters_a' )
__children["Box"]["BoxIn"]["__in"].setInput( __children["Box"]["parameters_a"] )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'label', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
__children["Box"]["BoxIn"]["out"].setInput( __children["Box"]["BoxIn"]["__in"] )
Gaffer.Metadata.registerValue( __children["Box"]["BoxIn"]["out"], 'noduleLayout:section', 'right' )
__children["Box"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -57.8037109, 14.8180389 ) )
__children["Box"]["parameters_a"].setInput( __children["BoxIn1"]["out"] )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'description', '' )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'label', None )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'noduleLayout:visible', True )
Gaffer.Metadata.registerValue( __children["Box"]["parameters_a"], 'labelPlugValueWidget:renameable', True )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["out"].setInput( __children["BoxIn"]["__in"] )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( 40.4076958, 17.2641544 ) )
__children["BoxOut"]["in"].setInput( __children["OSLImage"]["out"] )
__children["BoxOut"]["__out"].setInput( __children["BoxOut"]["in"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( 40.4076958, 0.600091934 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output image generated by this node.' )
__children["BoxIn1"]["name"].setValue( 'parameters_a' )
__children["BoxIn1"]["__in"].setInput( __children["parameters_a"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'description', '' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'label', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["__in"], 'noduleLayout:visible', True )
__children["BoxIn1"]["out"].setInput( __children["BoxIn1"]["__in"] )
Gaffer.Metadata.registerValue( __children["BoxIn1"]["out"], 'noduleLayout:section', 'right' )
__children["BoxIn1"]["__uiPosition"].setValue( imath.V2f( -1.94543266, 13.2770376 ) )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'noduleLayout:section', 'left' )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'userDefault', None )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'description', '' )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'label', None )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'noduleLayout:label', None )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'presetNames', None )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'presetValues', None )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'plugValueWidget:type', None )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["parameters_a"], 'noduleLayout:visible', True )


del __children

